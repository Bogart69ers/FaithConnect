@model FaithConnect.ViewModel.GroupViewModel
@{
    string profileImage = Url.Content("~/UploadedFiles/default.png");
    string userName = "User";

    var currentUserId = ViewBag.CurrentUserId;
    var userInfo = Model.UserInformation;
    var images = userInfo.Image?.ToList();
    profileImage = string.IsNullOrEmpty(images?.FirstOrDefault()?.imageFile)
        ? Url.Content("~/UploadedFiles/default.png")
        : Url.Content("~/UploadedFiles/" + images.FirstOrDefault()?.imageFile);
    userName = userInfo.first_name + " " + userInfo.last_name;
}
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt--5 pt--5">
    <div class="row" style="flex-wrap:nowrap">
        <div class="col-md-8">
            @if (Model.Posts != null && Model.Posts.Any())
            {
                foreach (var post in Model.Posts)
                {
                    <div class="post col-md-20">
                        <!-- Post Header -->
                        <div class="post-header">
                            <img src="~/Assets/Groups/img/group1.jpg" alt="Group Icon" class="group-icon">
                            <div class="group-info">
                                <div class="group-name">@post.Groups.groupName</div>
                                <div class="post-time">Posted by @post.UserAccount.username</div>
                                <div class="post-time">
                                    @if (post.date_created.HasValue)
                                    {
                                        @post.date_created.Value.ToString("MMMM dd, yyyy")
                                    }
                                    else
                                    {
                                        <span>No date provided</span>
                                    }
                                </div>                            
                            </div>
                            <div class="post-options">
                                <button class="options-button">...</button>
                                <div class="options-menu">
                                    <a href="#">Hide Post</a>
                                    <a href="#">Save post</a>
                                </div>
                            </div>
                        </div>
                        <!-- Post Content -->
                        <div class="post-content">
                            <p>@post.content</p>
                        </div>
                        <!-- Tags Section -->
                        <div>
                            @{
                                var tags = ViewBag.TagsByPost != null && ViewBag.TagsByPost.ContainsKey(post.id) ? ViewBag.TagsByPost[post.id] as List<string> : new List<string>();

                                if (tags != null && tags.Count > 0) // Use Count instead of Any
                                {
                                    foreach (var tag in tags)
                                    {
                                        <span class="badge badge-info" style="margin-right: 5px;" hidden>@tag</span>
                                    }
                                }
                                else
                                {
                                    <span hidden>No tags</span>
                                }
                            }
                        </div>
                        <!-- Post Actions -->
                        <div class="post-actions mt-2">
                            <button class="action-button" onclick="toggleLike(this)">
                                <span class="input-icon-addon"><i class="far fa-heart"></i></span> Like
                            </button>
                            <button class="action-button">
                                <span class="input-icon-addon"><i class="fas fa-comment-alt"></i></span> Interact
                            </button>
                            <button class="action-button">
                                <span class="input-icon-addon"><i class="fas fa-retweet"></i></span> Repost
                            </button>
                        </div>
                        <div class="post-comments">
                            <div class="post-time" style="font-size:13px; font-weight:bold; padding:10px 0 10px 0" >Interactions</div>
                            @if (post.PostComments != null)
                            {
                                foreach (var com in post.PostComments)
                                {
                                    string profileImages = Url.Content("~/UploadedFiles/default.png");

                                    var commentUserInfo = Model.UserInformations.FirstOrDefault(u => u.userId == com.userId);
                                    var image = commentUserInfo.Image?.ToList();
                                    profileImages = string.IsNullOrEmpty(image?.FirstOrDefault()?.imageFile)
                                    ? Url.Content("~/UploadedFiles/default.png")
                                    : Url.Content("~/UploadedFiles/" + image.FirstOrDefault()?.imageFile);


                                    <div class="post-header">
                                        <img src="@profileImages" alt="User Avatar" class="group-icon" style="width: 45px; height: 45px; object-fit: cover;">

                                        <div class="group-info">
                                            <div class="group-name">@(commentUserInfo != null ? commentUserInfo.first_name + " " + commentUserInfo.last_name : "Unknown User")</div>
                                            <div class="post-content">@com.comment</div>
                                        </div>
                                    </div>
                                    <br />
                                 }

                              }
                              else
                              {
                                 <p>No comments yet.</p>
                              }
                        </div>
                        <!-- Interact Input -->
                        <form action="@Url.Action("AddComment", "Home")" method="post" style="display: inline;">
                            <div class="post-interact mt-3">
                                <input type="hidden" name="groupId" value="@post.groupId" />
                                <input type="hidden" name="postId" value="@post.id" />
                                <input type="hidden" name="userId" value="@currentUserId" />
                                <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                <input type="text" name="comment" placeholder="Interact as @userName" class="comment-input">
                                <button type="submit" class="action-button"><span class="input-icon-addon"><i class="fas fa-paper-plane"></i></span></button>
                            </div>
                        </form>
                    </div>
               }
            }
            
        </div>
        <div class="col-lg-4">
            <div class="events-container bg-white p-4 shadow-sm border-rad20" style="position:sticky; top:10%;">
                <div class="event-buttons">
                    <button id="upcomingEventsBtn" class="event-button active">Upcoming Events</button>
                </div>
                <div id="upcomingEvent">
                    @foreach (var events in Model.Events.Where(g => g.userId == currentUserId && g.status == 0 && g.Event.event_date > DateTime.Now).OrderByDescending(g => g.Event.event_date))
                    {
                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                            <div class="event-date me-3 text-center">
                                <div class="event-day mb-1" style="color:black;">
                                    @events.Event.event_date.Value.ToString("MMM")
                                </div>
                                <div class="event-day mb-1">
                                    @(events.Event.event_date.HasValue ? events.Event.event_date.Value.ToString("dd") : "N/A")
                                </div>
                                <div class="event-time">@(events.Event.event_date.HasValue ? events.Event.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                            </div>
                            <div class="event-details">
                                <div class="event-day-of-week mb-1">@events.Event.event_date.Value.ToString("dddd")</div>
                                <button class="action-button event-title mb-1"
                                        data-toggle="modal"
                                        data-target="#viewEventModal"
                                        data-title="@events.Event.title"
                                        data-eventId="@events.Event.id"
                                        data-groupId="@events.Event.groupId"
                                        data-description="@events.Event.description"
                                        data-date="@events.Event.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                    @events.Event.title
                                </button>
                                <div class="event-description">@events.Event.description</div>
                            </div>
                        </div>
                    }
                </div>

                <div id="recentEvents" class="d-none">
                    <!-- Recent events will be populated similarly to upcoming events -->
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        function toggleLike(button) {
            const icon = button.querySelector('.input-icon-addon i');
            const isLiked = icon.classList.contains('fas');

            if (isLiked) {
                icon.classList.remove('fas');
                icon.classList.add('far');
                button.innerHTML = '<span class="input-icon-addon"><i class="far fa-heart"></i></span> Like';
            } else {
                icon.classList.remove('far');
                icon.classList.add('fas');
                button.innerHTML = '<span class="input-icon-addon"><i class="fas fa-heart"></i></span> Liked';
            }
        }
</script>