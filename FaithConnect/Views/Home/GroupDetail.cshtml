@model dynamic
@{

    string profileImage = Url.Content("~/UploadedFiles/default.png");
    string userName = "User";
    var groupView = Model as FaithConnect.ViewModel.GroupDetailViewModel;
    var currentUserId = ViewBag.CurrentUserId;
    var currentUserInfoId = ViewBag.CurrentUserInfoId;
    var currentGroupId = ViewBag.Currentgroup;
    var memberCount = groupView.GroupMemberships.Count(m => m.groupId == groupView.Group.id && m.status == 1);
    var group = groupView.AllGroupMembers;

    if (Model is FaithConnect.ViewModel.GroupDetailViewModel)
    {
        var groupViewModel = Model as FaithConnect.ViewModel.GroupDetailViewModel;
        var userInfo = groupViewModel.UserInformation;
        var images = userInfo.Image.ToList();
        profileImage = string.IsNullOrEmpty(images.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + images.FirstOrDefault()?.imageFile);
        userName = userInfo.first_name + " " + userInfo.last_name;
    }

}
@{ 
    ViewBag.Title = Model.Group.groupName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Assets/Groups/css/GroupDetail.css" />
<link href="~/Assets/signup/css/style.css" rel="stylesheet">
<link href="~/Assets/signup/css/style2.css" rel="stylesheet">




<div class="container-fluid mt-4">
    <div class="row" style="position:sticky; top:10px;">
        <div class="col-12">
            <!-- Group Banner Section -->
            <div class="group-header" >
                @{
                    string coverImage = string.IsNullOrEmpty(groupView.Group.GroupImage?.FirstOrDefault()?.coverPhoto)
                                        ? Url.Content("~/UploadedFiles/default-cover.jpg")
                                        : Url.Content("~/UploadedFiles/" + groupView.Group.GroupImage.FirstOrDefault()?.coverPhoto);                }
                <img src="@coverImage" alt="Group Header" class="img-fluid group-banner">
                <div class="group-info" style="position: absolute; bottom: 30px; left: 30px;">
                    <h2>@Model.Group.groupName</h2>
                    
                    <p>@{
                        var member = groupView.GroupMemberships.Count(m => m.groupId == currentGroupId  && m.status == 1);
                        var members = " ";
                        if(member <= 1)
                        {
                            members = "member";
                        }// Count members only with joined status
                        else if (member > 1)
                        {
                            members = "members";
                        }
                    }
                    
                    @member @members</p>
                    <!-- If the logged-in user is the group admin, show the "Edit Group" button -->
                    @if (Model.Group.groupAdmin == currentUserId)
                    {
                        <button class="btn btn-custom" data-toggle="modal" data-target="#editGroupProfileModal">Edit Group</button>
                    }
                    else if (groupView.GroupMemberships.Any(m => m.userId == currentUserInfoId && m.status == 1))
                    {
                        <button class="btn btn-custom">Invite</button>
                        <button class="btn btn-custom">Leave</button>
                    }
                    else
                    {
                        <button class="btn btn-custom">Join Group</button>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model.Group.status == 0)
    {
        <div class="group-navigation" style="position:sticky; top:310px;">
            <ul>
                <li><a href="#" class="nav-link" data-target="contents">Contents</a></li>             
            </ul>
        </div>


        <h3 style="margin-top:3%; padding-left:25%" >Waiting For Admin Approval. Please be Patient!</h3>
    }
    else if (Model.Group.status == 1)
    {
        <div class="group-navigation" style="position:sticky; top:310px;">
            <ul>
                <li><a href="#" class="nav-link" data-target="contents">Contents</a></li>
                <li><a href="#" class="nav-link" data-target="events">Events</a></li>
                <li><a href="#" class="nav-link" data-target="forums">Forums</a></li>
                @if (Model.Group.groupAdmin == currentUserId)
                {
                    <li><a href="#" class="nav-link" data-target="manage">Member Management</a></li>
                }
            </ul>
        </div>


        <div class="tab-content">
            <div id="contents" class="tab-pane container pt--5" style="margin-top:3%;">
                <div class="row" style="flex-wrap:nowrap">
                    <div class="col-md-8">
                        @if (Model.Group.groupAdmin == currentUserId)
                        {
                            <div class="post col-md-20">
                                <div class="post-interact">
                                    <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                    <input data-toggle="modal" data-target="#createPostModal" type="text" placeholder="Post Something" class="comment-input">
                                </div>
                                <div class="post-actions">
                                    <button data-toggle="modal" data-target="#createPostModal" class="action-button"><span class="input-icon-addon"><i class="fas fa-calendar"></i></span> Create Event</button>
                                    <button data-toggle="modal" data-target="#createPostModal" class="action-button"><span class="input-icon-addon"><i class="fas fa-video"></i></span> Photo/Video</button>
                                </div>
                            </div>
                        }

                        @foreach (var item in groupView.PostManage.Where(item => item.groupId == currentGroupId && item.status == 0))
                        {
                            <div class="post col-md-20">

                                <div class="post-header">
                                    @{
                                        var user = groupView.UserInformations.FirstOrDefault(u => u.userId == item.createdBy);
                                        string profilePicture = user != null && user.Image != null && user.Image.Any()
                                                            ? Url.Content("~/UploadedFiles/" + user.Image.FirstOrDefault()?.imageFile)
                                                            : Url.Content("~/UploadedFiles/default.png"); // Fallback to default profile picture
                                        string fullName = user != null ? $"{user.first_name} {user.last_name}" : "Unknown";
                                    }
                                    <img src="@profilePicture" alt="Group Icon" class="group-icon">
                                    <div class="group-info">

                                        <div class="group-name" style="color:#000000ad; text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">
                                            @fullName
                                        </div>
                                        <div class="post-time" style="text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">Admin</div>
                                    </div>
                                    <div class="post-options">
                                        <button class="options-button">...</button>
                                        <div class="options-menu">
                                            <a href="#">Hide Post</a>
                                            <a href="#">Save post</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="post-content">
                                    <p>@item.content</p>
                                </div>
                                <div class="post-actions">
                                    <button class="action-button" onclick="toggleLike(this)"><span class="input-icon-addon"><i class="far fa-heart"></i></span> Like</button>
                                    @if (groupView.GroupMemberships.Any(m => m.userId == currentUserInfoId && m.groupId == currentGroupId && m.status == 1))
                                    {
                                        <button class="action-button">
                                            <span class="input-icon-addon"><i class="fas fa-comment-alt"></i></span> Interact
                                        </button>
                                    }
                                    <button class="action-button"><span class="input-icon-addon"><i class="fas fa-retweet"></i></span> Repost</button>

                                </div>
                                @if (groupView.GroupMemberships.Any(m => m.userId == currentUserInfoId && m.groupId == currentGroupId && m.status == 1))
                                {
                                    <div class="post-interact">
                                        <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                        <input type="text" placeholder="Interact as @User.Identity.Name" class="comment-input">
                                        <button class="action-button"><span class="input-icon-addon"><i class="fas fa-paper-plane"></i></span></button>
                                    </div>
                                }

                            </div>
                                        }
                    </div>
                    <div class="col-lg-4">
                        <div class="events-container bg-white p-4 shadow-sm border-rad20" style="position:static; top:380px;">
                            <div class="event-buttons">
                                <button id="upcomingEventsBtn" class="event-button active">Upcoming Events</button>
                                @*<button id="recentEventsBtn" class="event-button">Recent Events</button>*@
                            </div>
                            <div id="upcomingEvents">
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 1 && g.event_date > DateTime.Now).OrderByDescending(g => g.event_date))
                                    {
                                    <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                        <div class="event-date me-3 text-center">
                                            <div class="event-day mb-1">

                                                @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                            </div>
                                            <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>
                                        </div>
                                        <div class="event-details">

                                            <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("MMMM dddd")</div>
                                            <button class="action-button event-title mb-1"
                                                    data-toggle="modal"
                                                    data-target="#viewEventModal"
                                                    data-title="@events.title"
                                                    data-eventId="@events.id"
                                                    data-groupId="@events.groupId"
                                                    data-description="@events.description"
                                                    data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                @events.title
                                            </button>
                                            <div class="event-description">@events.description</div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div id="recentEvents" class="d-none">
                                <!-- Recent events will be populated similarly to upcoming events -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            @if (currentUserId == Model.Group.groupAdmin)
            {
                <div class="tab-pane container mt-3" id="events">
                    <div class="row">

                        <div class="col-md-6">
                            <div class="events-container bg-white p-4 shadow-sm border-rad20">
                                <div class="event-buttons">
                                    <button id="upcomingEventBtn" class="event-button active">Upcoming Events</button>
                                    <button id="recentEventsBtn" class="event-button">Recent Events</button>
                                    <button id="pendingEventsBtn" class="event-button">Pending Events</button>

                                </div>
                                <div id="upcomingEvent" class="d-none">
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 1 && g.event_date > DateTime.Now).OrderByDescending(g => g.event_date))
                                    {
                                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                            <div class="event-date me-3 text-center">
                                                <div class="event-day mb-1" style="color:black;">
                                                    @events.event_date.Value.ToString("MMM")
                                                </div>
                                                <div class="event-day mb-1">
                                                    @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                </div>
                                                <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                            </div>
                                            <div class="event-details">
                                                <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                <button class="action-button event-title mb-1"
                                                        data-toggle="modal"
                                                        data-target="#viewEventModal"
                                                        data-title="@events.title"
                                                        data-eventId="@events.id"
                                                        data-groupId="@events.groupId"
                                                        data-description="@events.description"
                                                        data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                    @events.title
                                                </button>                                                
                                                <div class="event-description">@events.description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div id="recentEvent" class="d-none">
                                        @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 1 && DateTime.Now > g.event_date).OrderByDescending(g => g.event_date))
                                        {
                                            <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                                <div class="event-date me-3 text-center">
                                                    <div class="event-day mb-1" style="color:black;">
                                                        @events.event_date.Value.ToString("MMM")
                                                    </div>
                                                    <div class="event-day mb-1">
                                                        @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                    </div>
                                                    <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                                </div>
                                                <div class="event-details">
                                                    <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                    <button class="action-button event-title mb-1"
                                                            data-toggle="modal"
                                                            data-target="#viewEventModal"
                                                            data-title="@events.title"
                                                            data-eventId="@events.id"
                                                            data-groupId="@events.groupId"
                                                            data-description="@events.description"
                                                            data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                        @events.title
                                                    </button>
                                                    <div class="event-description">@events.description</div>
                                                </div>
                                            </div>
                                        }
                                </div>
                                <div id="pendingEvents" class="d-none">
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 0).OrderByDescending(g => g.event_date))
                                    {
                                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                            <div class="event-date me-3 text-center">
                                                <div class="event-day mb-1" style="color:black;">
                                                    @events.event_date.Value.ToString("MMM")
                                                </div>
                                                <div class="event-day mb-1">
                                                    @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                </div>
                                                <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                            </div>
                                            <div class="event-details">
                                                <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                <button class="action-button event-title mb-1"
                                                        data-toggle="modal"
                                                        data-target="#viewEventModal"
                                                        data-title="@events.title"
                                                        data-eventId="@events.id"
                                                        data-groupId="@events.groupId"
                                                        data-description="@events.description"
                                                        data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                    @events.title
                                                </button>
                                                <div class="event-description">@events.description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="calendar-container bg-white p-4 shadow-sm border-rad20">
                                <h5>Create Event</h5>
                                <!--event time still not functional and invite all group members-->
                                <form action="@Url.Action("CreateEvent", "Home")" method="post" style="display: inline;">

                                    <input type="hidden" name="groupId" value="@currentGroupId" />
                                    <input type="hidden" name="userId" value="@currentUserId" />

                                    <div class="form-group mt-3">
                                        <label>Event Name</label>
                                        <input type="text" name="title" class="form-control" placeholder="Event / Meeting Name">
                                    </div>
                                    <div class="form-group mt-3">
                                        <label>Start Date</label>
                                        <input type="date" name="event_date" class="form-control">
                                    </div>
                                    <div class="form-group mt-3">
                                        <label>Start Time</label>
                                        <input type="time" name="event_time" class="form-control">                                   
                                    </div>
                                    <div class="form-group mt-3">
                                        <textarea class="form-control" name="description" placeholder="Event / Meeting Details"></textarea>
                                    </div>
                                    <div class="form-group form-check">
                                        <input type="checkbox" class="form-check-input" id="inviteAll">
                                        <label class="form-check-label" for="inviteAll">Invite all group members</label>
                                    </div>
                                    <button type="submit" class="btn btn-custom">Create Event</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="tab-pane container mt-3" id="events">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="calendar-container bg-white p-4 shadow-sm border-rad20">
                                <div class="d-flex justify-content-between align-items-center">
                                    <button class="btn btn-light border-rad10" id="prevMonth">&lt;</button>
                                    <h4 id="currentMonth" class="mb-0">July 2024</h4>
                                    <button class="btn btn-light border-rad10" id="nextMonth">&gt;</button>
                                </div>
                                <table class="table table-borderless mt-3">
                                    <thead>
                                        <tr>
                                            <th>Sun</th>
                                            <th>Mon</th>
                                            <th>Tue</th>
                                            <th>Wed</th>
                                            <th>Thu</th>
                                            <th>Fri</th>
                                            <th>Sat</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Calendar days will be dynamically populated here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="events-container bg-white p-4 shadow-sm border-rad20">
                                <div class="event-buttons">
                                    <button id="upcomingEventBtn" class="event-button active">Upcoming Events</button>
                                    <button id="recentEventsBtn" class="event-button">Recent Events</button>
                                    <button id="pendingEventsBtn" class="event-button" hidden>Pending Events</button>

                                </div>
                                <div id="upcomingEvent" class="d-none">
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 1 && g.event_date > DateTime.Now).OrderByDescending(g => g.event_date))
                                    {
                                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                            <div class="event-date me-3 text-center">
                                                <div class="event-day mb-1" style="color:black; ">
                                                    @events.event_date.Value.ToString("MMM")
                                                </div>
                                                <div class="event-day mb-1">
                                                    @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                </div>
                                                <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                            </div>
                                            <div class="event-details">
                                                <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                <button class="action-button event-title mb-1"
                                                        data-toggle="modal"
                                                        data-target="#viewEventModal"
                                                        data-title="@events.title"
                                                        data-eventId="@events.id"
                                                        data-groupId="@events.groupId"
                                                        data-description="@events.description"
                                                        data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                    @events.title
                                                </button>                                                <div class="event-description">@events.description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div id="recentEvent" class="d-none">
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 1 && DateTime.Now > g.event_date).OrderByDescending(g => g.event_date))
                                    {
                                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                            <div class="event-date me-3 text-center">
                                                <div class="event-day mb-1" style="color:black; ">
                                                    @events.event_date.Value.ToString("MMM")
                                                </div>
                                                <div class="event-day mb-1">
                                                    @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                </div>
                                                <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                            </div>
                                            <div class="event-details">
                                                <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                <button class="action-button event-title mb-1"
                                                        data-toggle="modal"
                                                        data-target="#viewEventModal"
                                                        data-title="@events.title"
                                                        data-eventId="@events.id"
                                                        data-groupId="@events.groupId"
                                                        data-description="@events.description"
                                                        data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                    @events.title
                                                </button>
                                                <div class="event-description">@events.description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div id="pendingEvents" class="d-none" hidden>
                                    @foreach (var events in groupView.Events.Where(g => g.groupId == currentGroupId && g.status == 0).OrderByDescending(g => g.event_date))
                                    {
                                        <div class="event-item mb-3 p-3 bg-light rounded d-flex" data-date="2024-07-12">
                                            <div class="event-date me-3 text-center">
                                                <div class="event-day mb-1" style="color:black;">
                                                    @events.event_date.Value.ToString("MMM")
                                                </div>
                                                <div class="event-day mb-1">
                                                    @(events.event_date.HasValue ? events.event_date.Value.ToString("dd") : "N/A")
                                                </div>
                                                <div class="event-time">@(events.event_date.HasValue ? events.event_date.Value.ToString("hh:mm tt") : "N/A")</div>

                                            </div>
                                            <div class="event-details">
                                                <div class="event-day-of-week mb-1">@events.event_date.Value.ToString("dddd")</div>
                                                <button class="action-button event-title mb-1"
                                                        data-toggle="modal"
                                                        data-target="#viewEventModal"
                                                        data-title="@events.title"
                                                        data-eventId="@events.id"
                                                        data-groupId="@events.groupId"
                                                        data-description="@events.description"
                                                        data-date="@events.event_date.Value.ToString("MMMM d, yyyy hh:mm tt")">
                                                    @events.title
                                                </button>
                                                <div class="event-description">@events.description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>                       
                    </div>
                </div>
            }
            <div id="forums" class="tab-pane container pt--5" style="margin-top:3%;">
                <div class="row" style="flex-wrap:nowrap">
                    <div class="col-md-12">

                        <div class="post col-md-20">
                            <div class="post-interact">
                                <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                <input data-toggle="modal" data-target="#createForumModal" type="text" placeholder="Post Something" class="comment-input">
                            </div>
                            <div class="post-actions">
                                <button data-toggle="modal" data-target="#createForumModal" class="action-button"><span class="input-icon-addon"><i class="fas fa-calendar"></i></span> Create Event</button>
                                <button data-toggle="modal" data-target="#createForumModal" class="action-button"><span class="input-icon-addon"><i class="fas fa-video"></i></span> Photo/Video</button>
                            </div>
                        </div>


                        @foreach (var item in groupView.ForumManage.Where(item => item.groupId == currentGroupId && item.status == 0))
                        {
                            <div class="post col-md-20">

                                <div class="post-header">
                                    @{
                                        var user = groupView.UserInformations.FirstOrDefault(u => u.userId == item.createdBy);
                                        string profilePicture = user != null && user.Image != null && user.Image.Any()
                                                            ? Url.Content("~/UploadedFiles/" + user.Image.FirstOrDefault()?.imageFile)
                                                            : Url.Content("~/UploadedFiles/default.png"); // Fallback to default profile picture
                                        string fullName = user != null ? $"{user.first_name} {user.last_name}" : "Unknown";
                                    }
                                    <img src="@profilePicture" alt="Group Icon" class="group-icon">
                                    <div class="group-info">

                                        <div class="group-name" style="color:#000000ad; text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">
                                            @fullName
                                        </div>
                                        @if (item.createdBy == Model.Group.groupAdmin)
                                        {
                                            <div class="post-time" style="text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">Admin</div>

                                        }
                                        else
                                        {
                                            <div class="post-time" style="text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">Member</div>

                                        }
                                    </div>
                                    <div class="post-options">
                                        <button class="options-button">...</button>
                                        <div class="options-menu">
                                            <a href="#">Hide Post</a>
                                            <a href="#">Save post</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="post-content">
                                    <p>@item.content</p>
                                </div>
                                <div class="post-actions">
                                    <button class="action-button" onclick="toggleLike(this)"><span class="input-icon-addon"><i class="far fa-heart"></i></span> Like</button>
                                    <button class="action-button"><span class="input-icon-addon"><i class="fas fa-comment-alt"></i></span> Interact</button>
                                    <button class="action-button"><span class="input-icon-addon"><i class="fas fa-retweet"></i></span> Repost</button>
                                </div>
                                <div class="post-interact">
                                    <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                    <input type="text" placeholder="Interact as @User.Identity.Name" class="comment-input">
                                </div>
                            </div>
                                        }
                    </div>
                </div>
            </div>

            @if (currentUserId == Model.Group.groupAdmin)
            {
                <div id="manage" class="tab-pane">
                    <h2>Manage Group</h2>
                    <p>Group Management.</p>
                    <div class="row">
                        <!-- Content Approval List -->
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <div class="card-title">Pending Members</div>
                                </div>
                                <div class="card-body">
                                    <table id="contentApprovalTable" class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Date Requested</th>
                                                <th>Status</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in groupView.MemberManagements.Where(item => item.groupId == currentGroupId && item.status == 0))
                                            {

                                                <tr>

                                                    <td>
                                                        @{
                                                            var user = groupView.UserInformations.FirstOrDefault(u => u.id == item.userId);
                                                            string fullName = user != null ? $"{user.first_name} {user.last_name}" : "Unknown";
                                                        }
                                                        @fullName
                                                    </td>
                                                    <td>@item.dateJoined</td>
                                                    <td><span class="badge badge-warning" style="color:red">Pending</span></td>
                                                    <td>

                                                        <form action="@Url.Action("UpdateMembershipStatus", "Home")" method="post" style="display: inline;">
                                                            <input type="hidden" name="groupId" value="@item.groupId" />
                                                            <input type="hidden" name="userId" value="@item.userId" />
                                                            <input type="hidden" name="id" value="@item.id" />
                                                            <input type="hidden" name="status" value="1" />
                                                            <button type="submit" class="btn btn-success btn-sm">
                                                                <i class="fas fa-check"></i> Approve
                                                            </button>
                                                        </form>

                                                        <form action="@Url.Action("UpdateMembershipStatus", "Home")" method="post" style="display: inline;">
                                                            <input type="hidden" name="groupId" value="@item.groupId" />
                                                            <input type="hidden" name="userId" value="@item.userId" />
                                                            <input type="hidden" name="id" value="@item.id" />
                                                            <input type="hidden" name="status" value="2" />
                                                            <button type="submit" class="btn btn-danger btn-sm">
                                                                <i class="fas fa-times"></i> Reject
                                                            </button>
                                                        </form>

                                                    </td>
                                                </tr>
                                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                                                            }
        </div>
                                                            }
</div>

<div class="modal fade" id="createPostModal" tabindex="-1" role="dialog" aria-labelledby="createPostModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Post", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="createPostModal">Create Post</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:0px; background-color:#00000000">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                    <div class="modal-body">


                        <div class="post-header">
                            <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                            <div class="group-info">
                                <div class="group-name" style="color:black; text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">@User.Identity.Name</div>
                            </div>
                        </div>
                        <div class="post-content">
                            <input name="content" type="text" placeholder="Post Something" style="padding:10px 10px 50% 10px; width:100%; border:0px; border-radius:10px;">
                        </div>
                        <div class="tags-input">
                            <label for="tags">Tags (comma-separated):</label>
                            <input name="tags" type="text" placeholder="e.g., faith, prayer, inspiration" style="padding:10px; width:100%; border:1px solid #ccc; border-radius:5px;">
                        </div>
                        <input type="hidden" name="groupId" value="@currentGroupId" />
                        <input type="hidden" name="createdBy" value="@currentUserId" />                      
                    </div>
                    <div class="modal-footer">
                        <input type="submit" class="btn" value="Post" style="background-color:#cdbb9c; width:100%;" />
                    </div>
            }

        </div>
    </div>
</div>

    <div class="modal fade" id="createForumModal" tabindex="-1" role="dialog" aria-labelledby="createForumModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("Forum", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                    <div class="modal-header">
                        <h5 class="modal-title" id="createForumModal">Create Post</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:0px; background-color:#00000000">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">


                        <div class="post-header">
                            <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                            <div class="group-info">
                                <div class="group-name" style="color:black; text-shadow:1px 1px 3px rgb(255 255 255 / 0%);">@User.Identity.Name</div>
                            </div>
                        </div>
                        <div class="post-content">
                            <input name="content" type="text" placeholder="Start Discussion" style="padding:10px 10px 50% 10px; width:100%; border:0px; border-radius:10px;">
                        </div>
                        <input type="hidden" name="groupId" value="@currentGroupId" />
                        <input type="hidden" name="createdBy" value="@currentUserId" />
                    </div>
                    <div class="modal-footer">
                        <input type="submit" class="btn" value="Post" style="background-color:#cdbb9c; width:100%;" />
                    </div>
                }

            </div>
        </div>
    </div>
    
    <div class="modal fade" id="viewEventModal" tabindex="-1" role="dialog" aria-labelledby="viewEventModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        @using (Html.BeginForm("MarkAsGoing", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="modal-header">
                <h5 class="modal-title" id="viewEventModalTitle">Event Information</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:0px; background-color:#00000000">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h5 id="eventTitle"></h5>
                <p id="eventDate"></p>
                <p id="eventDescription"></p>
                <input type="hidden" name="eventId" id="eventIdInput" />
                <input type="hidden" name="groupId" id="groupIdInput" />

            </div>
            <div class="modal-footer">
                <input type="submit" class="btn " value="Going" style="background-color:#cdbb9c; width:20%;" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        }
        </div>
    </div>
</div>

<div class="modal fade" id="editGroupProfileModal" tabindex="-1" role="dialog" aria-labelledby="editGroupProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("ChangeGroupPhoto", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="editGroupProfileModalLabel">Edit Profile</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                    <div class="modal-body">
                        <input type="hidden" name="groupId" value="@currentGroupId" />
                       
                        <div class="form-group text-center">
                            <label for="coverPhoto">Cover Photo</label>
                            <input type="file" name="coverPhoto" id="coverPhoto" accept="image/*" class="form-control" onchange="previewImage(event, 'coverPhotoPreviewContainer')">
                            <div id="coverPhotoPreviewContainer" class="image-preview-container mt-2 rectangular-container">
                                <img id="coverPhotoPreview" src="#" alt="Cover Photo Preview" class="img-fluid preview-image" style="display: none;">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="firstname">Group Name</label>
                            <input type="text" name="groupName" class="form-control" value="@groupView.Group.groupName" required />
                            @Html.ValidationMessageFor(model => groupView.Group.groupName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="lastname">Group Description</label>
                            <textarea name="description" class="form-control" required>@groupView.Group.description</textarea>
                            @Html.ValidationMessageFor(model => groupView.Group.description, "", new { @class = "text-danger" })
                        </div>                 
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-success" value="Save Changes" style="background-color:saddlebrown" />
                    </div>
            }

        </div>
    </div>
</div>







<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJTY5KVphtPhzWj9WO1clHTMGaEkaGQ2J95JCzy/8p3ylzTEi" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-pjaaA8dDz/UmAGHEmpNMI0HHLmV7xI5a2zVzt95Z5CjoFQ7p1rR/YL2cw6K9/6Nf" crossorigin="anonymous"></script>
<script src="~/Assets/Groups/js/groupdetail.js"></script>
<script src="~/Assets/signup/js/preview.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Add event listener to all event buttons
        document.querySelectorAll('.event-title').forEach(button => {
            button.addEventListener('click', function () {
                // Get data from the clicked button
                const title = this.getAttribute('data-title');
                const description = this.getAttribute('data-description');
                const date = this.getAttribute('data-date');
                const eventId = this.getAttribute('data-eventId');
                const groupId = this.getAttribute('data-groupId');


                // Populate the modal with event data
                document.getElementById('eventTitle').textContent = title;
                document.getElementById('eventDescription').textContent = description;
                document.getElementById('eventDate').textContent = date;
                document.getElementById('eventIdInput').value = eventId;
                document.getElementById('groupIdInput').value = groupId;


            });
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Button and section references
        const upcomingEventBtn = document.getElementById('upcomingEventBtn');
        const recentEventsBtn = document.getElementById('recentEventsBtn');
        const upcomingEvent = document.getElementById('upcomingEvent');
        const recentEvent = document.getElementById('recentEvent');

        function resetActiveStates() {
            upcomingEventBtn.classList.remove('active');
            recentEventsBtn.classList.remove('active');
            upcomingEvent.classList.add('d-none');
            recentEvent.classList.add('d-none');
        }

        upcomingEventBtn.addEventListener('click', function () {
            resetActiveStates();
            upcomingEventBtn.classList.add('active');
            upcomingEvent.classList.remove('d-none');
        });

        recentEventsBtn.addEventListener('click', function () {
            resetActiveStates();
            recentEventsBtn.classList.add('active');
            recentEvent.classList.remove('d-none');
        });

        resetActiveStates();
        upcomingEventBtn.classList.add('active');
        upcomingEvent.classList.remove('d-none');
    });

    document.addEventListener("DOMContentLoaded", function () {
        const currentMonthEl = document.getElementById('currentMonth');
        const prevMonthBtn = document.getElementById('prevMonth');
        const nextMonthBtn = document.getElementById('nextMonth');
        let currentDate = new Date();
        let currentMonth = currentDate.getMonth();
        let currentYear = currentDate.getFullYear();

        function renderCalendar() {
            const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
            const firstDay = new Date(currentYear, currentMonth, 1).getDay();
            const calendarBody = document.querySelector('.calendar-container tbody');
            const eventItems = Array.from(document.querySelectorAll('.event-item'));
            const eventDetails = eventItems.map(item => ({
                date: new Date(item.getAttribute('data-date')),
                title: item.querySelector('.event-title').textContent,
                description: item.querySelector('.event-description').textContent
            }));

            calendarBody.innerHTML = '';
            let date = 1;

            for (let i = 0; i < 6; i++) {
                const row = document.createElement('tr');
                for (let j = 0; j < 7; j++) {
                    const cell = document.createElement('td');
                    if (i === 0 && j < firstDay) {
                        cell.appendChild(document.createTextNode(''));
                    } else if (date > daysInMonth) {
                        break;
                    } else {
                        const span = document.createElement('span');
                        span.textContent = date;
                        const cellDate = new Date(currentYear, currentMonth, date);
                        const event = eventDetails.find(event =>
                            event.date.getDate() === date &&
                            event.date.getMonth() === currentMonth &&
                            event.date.getFullYear() === currentYear
                        );

                        if (event) {
                            cell.classList.add('event-day');
                            cell.setAttribute('data-title', event.title);
                            cell.setAttribute('data-description', event.description);

                            // Add event for showing tooltip
                            cell.addEventListener('click', function () {
                                eventTitle.textContent = event.title;
                                eventDate.textContent = `Date: ${event.date.toLocaleDateString()}`;
                                eventTime.textContent = `Time: ${event.eventTime}`;
                                eventDescription.textContent = event.description;
                                eventModal.style.display = 'block';
                            });

                            cell.addEventListener('mouseout', function () {
                                const tooltip = document.getElementById('tooltip');
                                tooltip.style.display = 'none';
                            });
                        }

                        cell.appendChild(span);
                        row.appendChild(cell);
                        date++;
                    }
                }
                calendarBody.appendChild(row);
            }
            currentMonthEl.textContent = new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long', year: 'numeric' });
        }

        prevMonthBtn.addEventListener('click', function () {
            currentMonth = currentMonth === 0 ? 11 : currentMonth - 1;
            currentYear = currentMonth === 11 ? currentYear - 1 : currentYear;
            renderCalendar();
        });

        nextMonthBtn.addEventListener('click', function () {
            currentMonth = currentMonth === 11 ? 0 : currentMonth + 1;
            currentYear = currentMonth === 0 ? currentYear + 1 : currentYear;
            renderCalendar();
        });

        renderCalendar();
    });

    const modal = document.getElementById('eventModal');
    const closeModal = document.getElementById('closeModal');

    document.querySelectorAll('.event-title').forEach(button => {
        button.addEventListener('click', function () {
            const title = this.getAttribute('data-title');
            const description = this.getAttribute('data-description');
            const eventDate = this.getAttribute('data-date');  // Get event date from data attribute
            const eventTime = this.getAttribute('data-time');  // Get event time from data attribute

            // Update modal content
            document.getElementById('eventTitle').textContent = title;
            document.getElementById('eventDescription').textContent = description;
            document.getElementById('eventDate').textContent = `Date: ${eventDate}`;  // Set event date in modal
            document.getElementById('eventTime').textContent = `Time: ${eventTime}`;  // Set event time in modal

            // Show the modal
            document.getElementById('eventModal').style.display = 'block';
        });
    });

    closeModal.addEventListener('click', function () {
        modal.style.display = 'none';
    });

    window.addEventListener('click', function (event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
</script>

<script>
    $(document).ready(function () {
        if ($.fn.DataTable) {
            $('#contentApprovalTable').DataTable({
                paging: true,
                lengthChange: true,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                responsive: true
            });
        } else {
            console.warn("DataTable plugin not loaded.");
        }
    });

</script>

<script>
        function toggleLike(button) {
            const icon = button.querySelector('.input-icon-addon i');
            const isLiked = icon.classList.contains('fas');

            if (isLiked) {
                icon.classList.remove('fas');
                icon.classList.add('far');
                button.innerHTML = '<span class="input-icon-addon"><i class="far fa-heart"></i></span> Like';
            } else {
                icon.classList.remove('far');
                icon.classList.add('fas');
                button.innerHTML = '<span class="input-icon-addon"><i class="fas fa-heart"></i></span> Liked';
            }
        }
</script>

<script src="~/Assets/Admin/js/core/jquery-3.7.1.min.js"></script>
<script src="~/Assets/Admin/js/core/popper.min.js"></script>
<script src="~/Assets/Admin/js/core/bootstrap.min.js"></script>
<!-- jQuery Scrollbar -->
<script src="~/Assets/Admin/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
<!-- Sticky Sidebar -->
<script src="~/Assets/Admin/js/plugin/sticky-sidebar/sticky-sidebar.min.js"></script>
<!-- Kaiadmin JS -->
<script src="~/Assets/Admin/js/kaiadmin.min.js"></script>
<script src="~/Assets/Admin/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>
<script src="~/Assets/Admin/js/plugin/bootstrap-toggle/bootstrap-toggle.min.js"></script>
<script src="~/Assets/Admin/js/plugin/list.js/list.min.js"></script>
<script src="~/Assets/Admin/js/kaiadmin.min.js"></script>
<script src="~/Assets/Admin/js/kaiadmin.js"></script>
<script src="~/Assets/Admin/js/plugin/chart.js/chart.min.js"></script>
<script src="~/Assets/Admin/js/plugin/datatables/datatables.min.js"></script>
<script src="~/Assets/Admin/js/plugin/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>
<script src="~/Assets/Admin/js/plugin/datepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Assets/Admin/js/plugin/jquery.validate/jquery.validate.min.js"></script>
<script src="~/Assets/Admin/js/plugin/moment/moment.min.js"></script>
<script src="~/Assets/Admin/js/plugin/select2/select2.full.min.js"></script>
<script src="~/Assets/Admin/js/plugin/sortable/sortable.min.js"></script>
<script src="~/Assets/Admin/js/plugin/sweetalert/sweetalert.min.js"></script>
<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.bundle.min.js"></script>