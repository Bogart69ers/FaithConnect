@model FaithConnect.UserInformation

@{
    ViewBag.Title = "MyProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Assets/signup/css/style.css" rel="stylesheet">
<link href="~/Assets/signup/css/style2.css" rel="stylesheet">


<body>
    <div class="container">
        <div class="profile-page tx-13">
            <div class="row">
                <div class="col-12">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">
                            @TempData["SuccessMessage"]
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            @TempData["ErrorMessage"]
                        </div>
                    }
                </div>
                <div class="col-12 grid-margin">
                    <div class="profile-header">
                        <div class="cover">
                            <div class="gray-shade"></div>
                            <figure>
                                @{
                                    string coverImage = string.IsNullOrEmpty(Model.Image.FirstOrDefault()?.coverPhoto) ? Url.Content("~/UploadedFiles/default-cover.jpg") : Url.Content("~/UploadedFiles/" + Model.Image.FirstOrDefault()?.coverPhoto);
                                }
                                <img src="@coverImage" class="img-fluid" alt="profile cover" style="height: 500px; object-fit: cover;">
                            </figure>
                            <div class="cover-body d-flex justify-content-between align-items-center">
                                <div>
                                    @{
                                        string profileImage = string.IsNullOrEmpty(Model.Image.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + Model.Image.FirstOrDefault()?.imageFile);
                                    }
                                    <img class="rounded-circle me-2" src="@profileImage" alt="profile" style="width: 120px; height: 120px; object-fit: cover;border: 3px solid white; border-radius: 50%; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);">
                                    <span class="profile-name">@Model.first_name @Model.last_name</span>
                                </div>
                                <div class="d-none d-md-block">
                                    <button class="btn btn-primary btn-icon-text btn-edit-profile" data-toggle="modal" data-target="#editProfileModal">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit btn-icon-prepend">
                                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                        </svg> Edit profile
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="header-links">
                            <ul class="links d-flex align-items-center mt-3 mt-md-0">
                                <!-- Add other links as needed -->
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row profile-body">
                <!-- Left sidebar -->
                <div class="d-none d-md-block col-md-4 col-xl-3 left-wrapper">
                    <div class="card rounded">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h6 class="card-title mb-0">About</h6>
                            </div>
                            <p>@(Model.bio ?? "No bio available.")</p>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Joined:</label>
                                <p class="text-muted">
                                    @(Model.date_created.HasValue ? Model.date_created.Value.ToString("MMMM dd, yyyy") : "N/A")
                                </p>
                            </div>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Address:</label>
                                <p class="text-muted">@Model.address</p>
                            </div>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Email:</label>
                                <p class="text-muted">@Model.email</p>
                            </div>
                            <div class="mt-3 d-flex social-links">
                                <!-- Social links -->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Middle section -->
                <div class="col-md-8 col-xl-6 middle-wrapper">
                    <!-- Posts or other content -->
                </div>
                <!-- Right sidebar -->
                <div class="d-none d-xl-block col-xl-3 right-wrapper">
                    <!-- Additional content -->
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for editing profile -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" role="dialog" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("MyProfile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @Html.HiddenFor(model => model.id)
                        @Html.HiddenFor(model => model.userId)
                        @Html.HiddenFor(model => model.date_created)
                        @Html.HiddenFor(model => model.status)

                        <div class="form-group text-center">
                            <label for="profilePicture">Profile Picture</label>
                            <input type="file" name="profilePicture" id="profilePicture" accept="image/*" class="form-control" onchange="previewImage(event, 'profilePicPreviewContainer')">
                            <div id="profilePicPreviewContainer" class="image-preview-container mt-2 circular-container">
                                <img id="profilePicPreview" src="#" alt="Profile Picture Preview" class="img-fluid preview-image" style="display: none;">
                            </div>
                        </div>
                        <div class="form-group text-center">
                            <label for="coverPhoto">Cover Photo</label>
                            <input type="file" name="coverPhoto" id="coverPhoto" accept="image/*" class="form-control" onchange="previewImage(event, 'coverPhotoPreviewContainer')">
                            <div id="coverPhotoPreviewContainer" class="image-preview-container mt-2 rectangular-container">
                                <img id="coverPhotoPreview" src="#" alt="Cover Photo Preview" class="img-fluid preview-image" style="display: none;">
                            </div>
                        </div>
                       
                        <div class="form-group">
                            <label for="firstname">First Name</label>
                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.first_name, required = "required" } })
                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="lastname">Last Name</label>
                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.last_name, required = "required" } })
                            @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone</label>
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.phone, required = "required" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.email, required = "required", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="bio">Bio</label>
                            @Html.EditorFor(model => model.bio, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.bio, required = "required" } })
                            @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="location">Location</label>
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.address, required = "required" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-success" value="Save Changes" style="background-color:saddlebrown" />
                    </div>
                }

            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Assets/signup/js/preview.js"></script>

    
</body>
