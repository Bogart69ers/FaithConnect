@model FaithConnect.ViewModel.GroupViewModel

@{
    string userName = "User";

    var currentUserId = ViewBag.CurrentUserId;
    var userInfo = Model.UserInformation;

    userName = userInfo.first_name + " " + userInfo.last_name;

    ViewBag.Title = "MyProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Assets/signup/css/style.css" rel="stylesheet">
<link href="~/Assets/signup/css/style2.css" rel="stylesheet">


<body>
    <div class="container">
        <div class="profile-page tx-13">
            <div class="row">
                
                <div class="col-12 grid-margin">
                    <div class="profile-header">
                        <div class="cover">
                            <div class="gray-shade"></div>
                            <figure>
                                @{
                                    string coverImage = string.IsNullOrEmpty(Model.UserInformation.Image.FirstOrDefault()?.coverPhoto) ? Url.Content("~/UploadedFiles/default-cover.jpg") : Url.Content("~/UploadedFiles/" + Model.UserInformation.Image.FirstOrDefault()?.coverPhoto);
                                }
                                <img src="@coverImage" class="img-fluid" alt="profile cover" style="height: 500px; object-fit: cover;">
                            </figure>
                            <div class="cover-body d-flex justify-content-between align-items-center">
                                <div>
                                    @{
                                        string profileImage = string.IsNullOrEmpty(Model.UserInformation.Image.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + Model.UserInformation.Image.FirstOrDefault()?.imageFile);
                                    }
                                    <img class="rounded-circle me-2" src="@profileImage" alt="profile" style="width: 120px; height: 120px; object-fit: cover;border: 3px solid white; border-radius: 50%; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);">
                                    <span class="profile-name">@Model.UserInformation.first_name @Model.UserInformation.last_name</span>
                                </div>
                                <div class="d-none d-md-block">
                                    <button class="btn btn-primary btn-icon-text btn-edit-profile" data-toggle="modal" data-target="#editProfileModal">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit btn-icon-prepend">
                                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                        </svg> Edit profile
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="header-links">
                            <ul class="links d-flex align-items-center mt-3 mt-md-0">
                                <!-- Add other links as needed -->
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row profile-body">
                <!-- Left sidebar -->
                <div class="d-none d-md-block col-md-4 col-xl-3 left-wrapper">
                    <div class="card rounded">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h6 class="card-title mb-0">About</h6>
                            </div>
                            <p>@(Model.UserInformation.bio ?? "No bio available.")</p>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Joined:</label>
                                <p class="text-muted">
                                    @(Model.UserInformation.date_created.HasValue ? Model.UserInformation.date_created.Value.ToString("MMMM dd, yyyy") : "N/A")
                                </p>
                            </div>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Address:</label>
                                <p class="text-muted">@Model.UserInformation.address</p>
                            </div>
                            <div class="mt-3">
                                <label class="tx-11 font-weight-bold mb-0 text-uppercase">Email:</label>
                                <p class="text-muted">@Model.UserInformation.email</p>
                            </div>
                            <div class="mt-3 d-flex social-links">
                                <!-- Social links -->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Middle section -->
                <div class="col-md-8">
                    @if (Model.Posts != null && Model.Posts.Any())
            {
                foreach (var post in Model.Posts)
                {
                            <div class="post col-md-20">
                                <!-- Post Header -->
                                <div class="post-header">
                                    <img src="~/Assets/Groups/img/group1.jpg" alt="Group Icon" class="group-icon">
                                    <div class="group-info">
                                        <div class="group-name">@post.Groups.groupName</div>
                                        <div class="post-time">Posted by @post.UserAccount.username</div>
                                        <div class="post-time">
                                            @if (post.date_created.HasValue)
                                            {
                                                @post.date_created.Value.ToString("MMMM dd, yyyy")
                                            }
                                            else
                                            {
                                                <span>No date provided</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="post-options">
                                        <button class="options-button">...</button>
                                        <div class="options-menu">
                                            <a href="#">Hide Post</a>
                                            <a href="#">Save post</a>
                                        </div>
                                    </div>
                                </div>
                                <!-- Post Content -->
                                <div class="post-content">
                                    <p>@post.content</p>
                                </div>
                                <!-- Tags Section -->
                                <div>
                                    @{
                                        var tags = ViewBag.TagsByPost != null && ViewBag.TagsByPost.ContainsKey(post.id) ? ViewBag.TagsByPost[post.id] as List<string> : new List<string>();

                                        if (tags != null && tags.Count > 0) // Use Count instead of Any
                                        {
                                            foreach (var tag in tags)
                                            {
                                                <span class="badge badge-info" style="margin-right: 5px;" hidden>@tag</span>
                                            }
                                        }
                                        else
                                        {
                                            <span hidden>No tags</span>
                                        }
                                    }
                                </div>
                                <!-- Post Actions -->
                                <div class="post-actions mt-2">
                                    <button class="action-button" onclick="toggleLike(this)">
                                        <span class="input-icon-addon"><i class="far fa-heart"></i></span> Like
                                    </button>
                                    <button class="action-button">
                                        <span class="input-icon-addon"><i class="fas fa-comment-alt"></i></span> Interact
                                    </button>                                   
                                </div>
                                <div class="post-comments">
                                    <div class="post-time" style="font-size:13px; font-weight:bold; padding:10px 0 10px 0">Interactions</div>
                                    @if (post.PostComments != null)
                                    {
                                        foreach (var com in post.PostComments)
                                        {
                                            string profileImages = Url.Content("~/UploadedFiles/default.png");

                                            var commentUserInfo = Model.UserInformations.FirstOrDefault(u => u.userId == com.userId);
                                            var image = commentUserInfo.Image?.ToList();
                                            profileImages = string.IsNullOrEmpty(image?.FirstOrDefault()?.imageFile)
                                            ? Url.Content("~/UploadedFiles/default.png")
                                            : Url.Content("~/UploadedFiles/" + image.FirstOrDefault()?.imageFile);


                                            <div class="post-header">
                                                <img src="@profileImages" alt="User Avatar" class="group-icon" style="width: 45px; height: 45px; object-fit: cover;">

                                                <div class="group-info">
                                                    <div class="group-name">@(commentUserInfo != null ? commentUserInfo.first_name + " " + commentUserInfo.last_name : "Unknown User")</div>
                                                    <div class="post-content">@com.comment</div>
                                                </div>
                                            </div>
                                            <br />
                                        }

                                    }
                                    else
                                    {
                                        <p>No comments yet.</p>
                                    }
                                </div>
                                <!-- Interact Input -->
                                <form action="@Url.Action("AddComment", "Home")" method="post" style="display: inline;">
                                    <div class="post-interact mt-3">
                                        <input type="hidden" name="groupId" value="@post.groupId" />
                                        <input type="hidden" name="postId" value="@post.id" />
                                        <input type="hidden" name="userId" value="@currentUserId" />
                                        <img src="@profileImage" alt="Avatar" class="user-icon" style="width: 45px; height: 45px; object-fit: cover">
                                        <input type="text" name="comment" placeholder="Interact as @userName" class="comment-input">
                                        <button type="submit" class="action-button"><span class="input-icon-addon"><i class="fas fa-paper-plane"></i></span></button>
                                    </div>
                                </form>
                            </div>
                                            }
                                        }

                </div>
                <!-- Right sidebar -->
               
            </div>

        </div>

    </div>


    <!-- Modal for editing profile -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" role="dialog" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("MyProfile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @Html.HiddenFor(model => model.UserInformation.id)
                        @Html.HiddenFor(model => model.UserInformation.userId)
                        @Html.HiddenFor(model => model.UserInformation.date_created)
                        @Html.HiddenFor(model => model.UserInformation.status)
                        @Html.HiddenFor(model => model.UserInformation.religion)
                        <input type="hidden" name="religion" value="@Model.UserInformation.religion" class="form-control">



                        <div class="form-group text-center">
                            <label for="profilePicture">Profile Picture</label>
                            <input type="file" name="profilePicture" id="profilePicture" accept="image/*" class="form-control" onchange="previewImage(event, 'profilePicPreviewContainer')">
                            <div id="profilePicPreviewContainer" class="image-preview-container mt-2 circular-container">
                                <img id="profilePicPreview" src="#" alt="Profile Picture Preview" class="img-fluid preview-image" style="display: none;">
                            </div>
                        </div>
                        <div class="form-group text-center">
                            <label for="coverPhoto">Cover Photo</label>
                            <input type="file" name="coverPhoto" id="coverPhoto" accept="image/*" class="form-control" onchange="previewImage(event, 'coverPhotoPreviewContainer')">
                            <div id="coverPhotoPreviewContainer" class="image-preview-container mt-2 rectangular-container">
                                <img id="coverPhotoPreview" src="#" alt="Cover Photo Preview" class="img-fluid preview-image" style="display: none;">
                            </div>
                        </div>
                       
                        <div class="form-group">
                            <label for="firstname">First Name</label>
                            <input type="text" name="firstname" value="@Model.UserInformation.first_name" class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.first_name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="lastname">Last Name</label>
                            <input type="text" name="lastname" value="@Model.UserInformation.last_name" class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.last_name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone</label>
                            <input type="text" name="phone" value="@Model.UserInformation.phone"  class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="text" name="email" value="@Model.UserInformation.email" class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="bio">Bio</label>
                            <input type="text" name="bio" placeholder="Enter bio" class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.bio, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="address">Address</label>
                            <input type="text" name="address" value="@Model.UserInformation.address" class="form-control">
                            @Html.ValidationMessageFor(model => model.UserInformation.address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-success" value="Save Changes" style="background-color:saddlebrown" />
                    </div>
                }

            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Assets/signup/js/preview.js"></script>

    
</body>
