@model dynamic
@{
    string profileImage = Url.Content("~/UploadedFiles/default.png");
    string userName = "User";

    if (Model is FaithConnect.UserInformation)
    {
        var userInfo = Model as FaithConnect.UserInformation;
        var images = userInfo.Image.ToList();
        profileImage = string.IsNullOrEmpty(images.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + images.FirstOrDefault()?.imageFile);
        userName = userInfo.first_name + " " + userInfo.last_name;
    }
    else if (Model is FaithConnect.ViewModel.GroupViewModel)
    {
        var groupViewModel = Model as FaithConnect.ViewModel.GroupViewModel;
        var userInfo = groupViewModel.UserInformation;
        var images = userInfo.Image.ToList();
        profileImage = string.IsNullOrEmpty(images.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + images.FirstOrDefault()?.imageFile);
        userName = userInfo.first_name + " " + userInfo.last_name;
    }
    else if (Model is FaithConnect.ViewModel.GroupDetailViewModel)
    {
        var groupDetailModel = Model as FaithConnect.ViewModel.GroupDetailViewModel;
        var userInfo = groupDetailModel.UserInformation;
        var images = userInfo.Image.ToList();
        profileImage = string.IsNullOrEmpty(images.FirstOrDefault()?.imageFile) ? Url.Content("~/UploadedFiles/default.png") : Url.Content("~/UploadedFiles/" + images.FirstOrDefault()?.imageFile);
        userName = userInfo.first_name + " " + userInfo.last_name;
    }

    string currentPath = Request.Path;
}
@functions {
    private string GetRedirectUrl(Notification notification)
    {
        // Example logic for determining redirect URL
        if (notification.message.Contains("post"))
        {
            // Redirect to the post details page
            return Url.Action("PostDetails", "Posts", new { postId = notification.userIdfrom });
        }
        else if (notification.message.Contains("event"))
        {
            // Redirect to the event details page
            return Url.Action("EventDetails", "Events", new { eventId = notification.userIdfrom });
        }
        else if (notification.message.Contains("group"))
        {
            // Redirect to the group details page
            return Url.Action("GroupDetail", "Groups", new { groupId = notification.userIdfrom });
        }

        // Default fallback
        return Url.Action("Index", "Home");
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title </title>
    <link rel="icon" href="~/Assets/login/img/Logo.ico" type="image/x-icon" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/Assets/Index/css/main.css" />
    <link rel="stylesheet" type="text/css" href="~/Assets/Index/css/Style2.css">
    
    <style>
        .notification-item {
    border: none;
    padding: 10px 0;
    transition: background-color 0.2s ease-in-out;
}

.notification-item:hover {
    background-color: #f1f1f1;
}

.notification-form {
    display: flex;
    width: 100%;
    padding: 0;
}

.notification-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    flex-shrink: 0;
}

.notification-message {
    font-size: 14px;
    line-height: 1.4;
    margin: 0;
    font-weight: 500;
    color: #333;
}

.notification-time {
    font-size: 12px;
    color: #888;
}

.notification-status {
    font-size: 12px;
    margin-left: 10px;
}

.notification-button {
    border: none;
    background: none;
    text-align: left;
    padding: 0;
    width: 100%;
}

.notification-button:focus {
    outline: none;
}


    </style>

</head>
<body class="bg-gray position-relative">
    <div class="bg-white d-flex align-items-center fixed-top shadow" style="min-height: 56px; z-index: 5">
        <div class="container-fluid">
            <div class="row align-items-center">
                <!-- logo and search -->
                <div class="col d-flex align-items-center">
                    <!-- logo -->
                    <img src="~/Assets/login/img/Logo.png" alt="Mobirise Website Builder" style="width:12%">

                </div>
                <!-- nav -->
                <div class="col d-none d-lg-flex justify-content-center">
                    <div class="mx-4 nav__btn @(currentPath == Url.Action("Index", "Home") ? "nav__btn-active" : "")">
                        <a href="~/Home/Index" class="btn px-4">
                            <i class="fas fa-home text-muted fs-4"></i>
                        </a>
                    </div>
                    <div class="mx-4 nav__btn @(currentPath == Url.Action("Group", "Home") ? "nav__btn-active" : "")">
                        <a href="~/Home/Group" class="btn px-4">
                            <i class="fas fa-users text-muted fs-4"></i>
                        </a>
                    </div>
                    <div class="mx-4 nav__btn @(currentPath == Url.Action("MyCalendar", "Home") ? "nav__btn-active" : "")">
                        <a href="~/Home/MyCalendar" class="btn px-4">
                            <i class="fas fa-calendar-alt text-muted fs-4"></i>
                        </a>
                    </div>
                </div>
                <!-- menus -->
                <div class="col d-flex align-items-center justify-content-end">
                    <!-- avatar -->
                    <div class="align-items-center justify-content-center d-none d-xl-flex">
                        <a href="~/Home/MyProfile">
                            <img class="rounded-circle me-2" src="@profileImage" alt="Avatar" style="width: 45px; height: 45px; object-fit: cover">
                        </a>
                        <a href="~/Home/MyProfile" style="text-decoration: none; color: black;">
                            <p class="m-0">@userName</p>
                        </a>
                    </div>

                    <!-- main menu -->
                    <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center mx-2" style="width: 38px; height: 38px" type="button" id="mainMenu" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                        <i class="fas fa-ellipsis-h"></i>
                    </div>
                    <!-- main menu dd -->
                    <ul class="dropdown-menu border-0 shadow p-3 overflow-auto" aria-labelledby="mainMenu" style="width: 23em; max-height: 600px">
                        <div>              
                            <hr />                           
                            <li class="my-2 p-1">
                                <a href="~/Home/Group" class="text-decoration-none text-dark d-flex align-items-center">
                                    <div class="rounded-circle bg-gray p-1 d-flex align-items-center justify-content-center me-3" style="width: 38px; height: 38px">
                                        <i class="fas fa-users"></i>
                                    </div>
                                    <div>
                                        <p class="m-0">Group</p>
                                    </div>
                                </a>
                            </li>
                            <li class="my-2 p-1">
                                <a href="~/Home/MyCalendar" class="text-decoration-none text-dark d-flex align-items-center">
                                    <div class="rounded-circle bg-gray p-1 d-flex align-items-center justify-content-center me-3" style="width: 38px; height: 38px">
                                        <i class="fas fa-book"></i>
                                    </div>
                                    <div>
                                        <p class="m-0">Event</p>
                                    </div>
                                </a>
                            </li>                         
                        </div>
                    </ul>

                    <!-- notifications -->
                    @{
                        var notifications = ViewBag.Notifications as List<notificationViewModel>;

                        int unreadCount = 0;

                        if (notifications != null)
                        {
                            // Explicitly check if isRead is false
                            unreadCount = notifications.Count(n => n.Notification.isRead == false);
                        }

                    } 

                    <!-- Notifications icon/button -->
                    <div class="position-relative rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center mx-2"
                         style="width: 38px; height: 38px; background-color: #f1f1f1; cursor: pointer;"
                         type="button" id="notMenu" data-bs-toggle="dropdown"
                         aria-expanded="false" data-bs-auto-close="outside">
                        <i class="fas fa-bell" style="font-size: 1.2rem; color: #333;"></i>
                        @if (unreadCount > 0)
                        {
                            <span style="position: absolute;
                                  bottom: -3px;
                                  right: -6px;
                                  background-color: #dc3545; 
                                  color: white;
                                  font-size: 0.75rem;
                                  font-weight: bold;
                                  border-radius: 100%;
                                  padding: 2px 6px;
                                  line-height: 1;
                                  min-width: 18px;
                                  text-align: center;
                                  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                                  z-index: 10;">
                                @unreadCount
                            </span>   
                         }
                    </div>

                    <ul class="dropdown-menu border-0 shadow p-3" aria-labelledby="notMenu"
                        style="width: 23em; max-height: 600px; overflow-y: auto">
                        <li class="p-1">
                            <div class="d-flex justify-content-between">
                                <h2>Notifications</h2>
                                <!-- 'Mark all as read' or other dropdown items -->
                            </div>
                            
                        </li>
                        @functions {
                            private string GetTimeAgo(DateTime? dateTime)
                            {
                                if (!dateTime.HasValue)
                                    return "just now";

                                var ts = DateTime.Now - dateTime.Value;
                                double delta = ts.TotalSeconds;
                                if (delta < 0) return "just now";
                                if (delta < 60) return ts.Seconds == 1 ? "1 second ago" : ts.Seconds + " seconds ago";
                                if (delta < 120) return "1 minute ago";
                                if (delta < 3600) return ts.Minutes + " minutes ago";
                                if (delta < 7200) return "1 hour ago";
                                if (delta < 86400) return ts.Hours + " hours ago";
                                if (delta < 172800) return "yesterday";
                                if (delta < 2592000) return ts.Days + " days ago";
                                if (delta < 31104000)
                                {
                                    int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30));
                                    return (months <= 1) ? "1 month ago" : months + " months ago";
                                }

                                int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365));
                                return (years <= 1) ? "1 year ago" : years + " years ago";
                            }
                        }

                        @using FaithConnect.ViewModel

                        @if (ViewBag.Notifications != null)
                        {
                            foreach (var notifVm in ViewBag.Notifications as List<notificationViewModel>)
                            {
                            <li class="notification-item my-2">
                                <form action="@Url.Action("MarkNotificationAsRead", "Base")" method="post" class="notification-form">
                                    <input type="hidden" name="id" value="@notifVm.Notification.id" />
                                    <input type="hidden" name="redirectUrl" value="@GetRedirectUrl(notifVm.Notification)" />
                                    <button type="submit" class="notification-button">
                                        <div class="d-flex align-items-center">
                                            <img src="@notifVm.AvatarUrl" alt="Avatar" class="notification-avatar me-3" />
                                            <div>
                                                <p class="notification-message m-0">@notifVm.Notification.message</p>
                                                <span class="notification-time text-muted small">@GetTimeAgo(notifVm.Notification.date)</span>
                                            </div>
                                            @if (!(notifVm.Notification.isRead ?? false))
                                            {
                                                <i class="fas fa-circle notification-status text-primary ms-auto"></i>
                                            }
                                        </div>
                                    </button>
                                </form>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="text-center text-muted">No notifications found.</li>
                    }              
                    </ul>

                  
                    <!-- secondary menu -->
                    <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center mx-2" style="width: 38px; height: 38px" type="button" id="secondMenu" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <ul class="dropdown-menu border-0 shadow p-3" aria-labelledby="secondMenu" style="width: 23em">
                        <li class="dropdown-item p-1 rounded d-flex" type="button">
                            <a href="~/Home/MyProfile" style="text-decoration: none; color: black;">
                                <img class="rounded-circle me-2" src="@profileImage" alt="Avatar" style="width: 45px; height: 45px; object-fit: cover">
                            </a>
                            <div>
                                <a href="~/Home/MyProfile" style="text-decoration: none; color: black;">
                                    <p class="m-0">@userName</p>
                                    <p class="m-0 text-muted">See your profile</p>
                                </a>
                            </div>
                        </li>                        
                        <hr />
                        <li class="dropdown-item p-1 my-3 rounded" type="button">
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <div class="d-flex" data-bs-toggle="dropdown">
                                        <i class="fas fa-cog bg-gray p-2 rounded-circle"></i>
                                        <div class="ms-3 d-flex justify-content-between align-items-center w-100">
                                            <p class="m-0">Settings & Privacy</p>
                                            <i class="fas fa-chevron-right"></i>
                                        </div>
                                    </div>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-cog"></i>
                                                </div>
                                                <p class="m-0">Settings</p>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-lock"></i>
                                                </div>
                                                <p class="m-0">Privacy Checkup</p>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-unlock-alt"></i>
                                                </div>
                                                <p class="m-0">Privacy Shortcuts</p>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-list"></i>
                                                </div>
                                                <p class="m-0">Activity Log</p>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-newspaper"></i>
                                                </div>
                                                <p class="m-0">News Feed Preferences</p>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#">
                                                <div class="rounded-circle p-1 bg-gray d-flex align-items-center justify-content-center me-2" style="width: 38px; height: 38px">
                                                    <i class="fas fa-globe"></i>
                                                </div>
                                                <p class="m-0">Language</p>
                                            </a>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </li>                        
                        <li class="dropdown-item p-1 my-3 rounded" type="button">
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a href="/Home/Logout" class="d-flex text-decoration-none text-dark">
                                        <i class="fas fa-cog bg-gray p-2 rounded-circle"></i>
                                        <div class="ms-3 d-flex justify-content-between align-items-center w-100">
                                            <p class="m-0">Log Out</p>
                                        </div>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item @(currentPath == Url.Action("Index", "Home") ? "active" : "")">
                    <a class="nav-link" href="~/Home/Index">Home</a>
                </li>
                <li class="nav-item @(currentPath == Url.Action("Group", "Home") ? "active" : "")">
                    <a class="nav-link" href="~/Home/Group">Group</a>
                </li>
                <li class="nav-item @(currentPath == Url.Action("MyCalendar", "Home") ? "active" : "")">
                    <a class="nav-link" href="~/Home/MyCalendar">Calendar</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="~/Home/MyProfile">Profile</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
    </div>
</body>
</html>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/Assets/Index/js/main.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"></script>
<script>
    function fetchNotificationCount() {
        fetch('/Home/GetUnreadNotificationCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('notificationBadge');
                if (data.unreadCount > 0) {
                    badge.textContent = data.unreadCount;
                    badge.style.display = 'inline-block';
                } else {
                    badge.style.display = 'none';
                }
            })
            .catch(error => console.error('Error fetching notifications:', error));
    }

    // Refresh notifications every 10 seconds
    setInterval(fetchNotificationCount, 10000);

    // Initial fetch on page load
    fetchNotificationCount();
</script>